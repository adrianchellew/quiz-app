{"version":3,"sources":["Header.js","questions.js","Quiz.js","index.js"],"names":["Header","className","questions","questionText","answers","answerText","isCorrect","Quiz","useState","currentQuestion","setCurrentQuestion","score","setScore","showScore","setShowScore","getCorrectAnswer","i","length","map","question","index","type","onClick","answer","isCorrectAnswer","nextQuestion","answerOptionClickHandler","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6JAIeA,MAJf,WACI,OAAO,oBAAIC,UAAU,iBAAd,uB,OCAEC,EAAY,CACrB,CACIC,aAAc,2CACdC,QAAS,CACL,CAACC,WAAY,cAAeC,WAAW,GACvC,CAACD,WAAY,mBAAoBC,WAAW,GAC5C,CAACD,WAAY,oBAAqBC,WAAW,KAGrD,CACIH,aAAc,yEACdC,QAAS,CACL,CAACC,WAAY,OAAQC,WAAW,GAChC,CAACD,WAAY,OAAQC,WAAW,GAChC,CAACD,WAAY,OAAQC,WAAW,KAGxC,CACIH,aAAc,2FACdC,QAAS,CACL,CAACC,WAAY,kBAAmBC,WAAW,GAC3C,CAACD,WAAY,qBAAsBC,WAAW,GAC9C,CAACD,WAAY,wBAAyBC,WAAW,KAGzD,CACIH,aAAc,yCACdC,QAAS,CACL,CAACC,WAAY,IAAKC,WAAW,GAC7B,CAACD,WAAY,IAAKC,WAAW,GAC7B,CAACD,WAAY,IAAKC,WAAW,MCiD1BC,MA5Ef,WAAiB,IAAD,EACkCC,mBAAS,GAD3C,mBACLC,EADK,KACYC,EADZ,OAEcF,mBAAS,GAFvB,mBAELG,EAFK,KAEEC,EAFF,OAGsBJ,oBAAS,GAH/B,mBAGLK,EAHK,KAGMC,EAHN,KAMNC,EAAmB,SAACX,GACtB,IAAK,IAAIY,EAAI,EAAGA,EAAIZ,EAAQa,OAAQD,IAClC,GAAIZ,EAAQY,GAAGV,UACb,OAAOF,EAAQY,GAAGX,YA0B1B,OACE,qBAAKJ,UAAU,yBAAf,SACE,qBAAKA,UAAU,YAAf,SACGY,EAEC,sBAAKZ,UAAU,gBAAf,UACE,qBAAKA,UAAU,aAAf,SACE,uBAAMA,UAAU,KAAhB,wBAAiCU,EAAjC,WAAgDT,EAAUe,OAA1D,SAEF,oBAAIhB,UAAU,UAAd,wCACCC,EAAUgB,KAAI,SAACC,EAAUC,GAAX,OACb,gCACE,4BAAID,EAAShB,eACb,mBAAGF,UAAU,gCAAb,SAA8Cc,EAAiBI,EAASf,aAFhEgB,MAKZ,wBAAQC,KAAK,SAASpB,UAAU,yBAAyBqB,QAtBjD,WAChBR,GAAa,GACbF,EAAS,GACTF,EAAmB,IAmBX,0BAIF,qCACA,sBAAKT,UAAU,mBAAf,UACE,qBAAKA,UAAU,iBAAf,SACE,qBAAIA,UAAU,KAAd,sBAA6BQ,EAAkB,EAA/C,IAAmDP,EAAUe,YAE/D,qBAAKhB,UAAU,qBAAf,SACE,oBAAIA,UAAU,KAAd,SAAoBC,EAAUO,GAAiBN,oBAGnD,qBAAKF,UAAU,iBAAf,SACGC,EAAUO,GAAiBL,QAAQc,KAAI,SAACK,EAAQH,GAAT,OACtC,wBAAoBC,KAAK,SAASpB,UAAU,yBAAyBqB,QAAS,kBApDzD,SAACE,GAE5BA,GACFZ,EAASD,EAAQ,GAGnB,IAAMc,EAAehB,EAAkB,EACnCgB,EAAevB,EAAUe,OAC3BP,EAAmBe,GAEnBX,GAAa,GA0C+EY,CAAyBH,EAAOjB,YAApH,SAAiIiB,EAAOlB,YAA3He,gBCjE7BO,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,cAAC,EAAD,IACA,cAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.44c144ef.chunk.js","sourcesContent":["function Header() {\r\n    return <h1 className='display-5 my-3'>Quiz App</h1>;\r\n}\r\n\r\nexport default Header;","// The question data to be used by the Quiz app\r\nexport const questions = [\r\n    {\r\n        questionText: 'Who is the author of Gone with the Wind?',\r\n        answers: [\r\n            {answerText: 'Jane Austen', isCorrect: false},\r\n            {answerText: 'Ernest Hemingway', isCorrect: false},\r\n            {answerText: 'Margaret Mitchell', isCorrect: true}\r\n        ]\r\n    },\r\n    {\r\n        questionText: 'In which year was the novel entitled Misery by Stephen King published?',\r\n        answers: [\r\n            {answerText: '1987', isCorrect: true},\r\n            {answerText: '1992', isCorrect: false},\r\n            {answerText: '1979', isCorrect: false}\r\n        ]\r\n    },\r\n    {\r\n        questionText: 'What is the title of the final book in the His Dark Materials trilogy by Philip Pullman?',\r\n        answers: [\r\n            {answerText: 'Northern Lights', isCorrect: false},\r\n            {answerText: 'The Amber Spyglass', isCorrect: true},\r\n            {answerText: 'The Tiger in the Well', isCorrect: false}\r\n        ]\r\n    },\r\n    {\r\n        questionText: 'How many Harry Potter books are there?',\r\n        answers: [\r\n            {answerText: '3', isCorrect: false},\r\n            {answerText: '5', isCorrect: false},\r\n            {answerText: '7', isCorrect: true}\r\n        ]\r\n    }\r\n];","import React, {useState} from 'react';\r\n// Import the question data\r\nimport {questions} from './questions';\r\n\r\nfunction Quiz() {\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n    const [score, setScore] = useState(0);\r\n    const [showScore, setShowScore] = useState(false);\r\n\r\n    // Find and return the correct answer option\r\n    const getCorrectAnswer = (answers) => {\r\n        for (let i = 0; i < answers.length; i++) {\r\n          if (answers[i].isCorrect) {\r\n            return answers[i].answerText;\r\n          }\r\n        }\r\n    }\r\n\r\n    const answerOptionClickHandler = (isCorrectAnswer) => {\r\n      // Increase the score if the answer is correct\r\n      if (isCorrectAnswer) {\r\n        setScore(score + 1);\r\n      }\r\n      // Show the next question or show the score if the quiz is over\r\n      const nextQuestion = currentQuestion + 1;\r\n      if (nextQuestion < questions.length) {\r\n        setCurrentQuestion(nextQuestion);\r\n      } else {\r\n        setShowScore(true);\r\n      }\r\n    }\r\n\r\n    // Refresh the quiz\r\n    const resetQuiz = () => {\r\n      setShowScore(false);\r\n      setScore(0);\r\n      setCurrentQuestion(0);\r\n    }\r\n  \r\n    return (\r\n      <div className='card w-75 mb-3 mx-auto'>\r\n        <div className='card-body'>\r\n          {showScore ? (\r\n            /* Show the score section if showScore has been set to true */\r\n            <div className='score-section'>\r\n              <div className='score mb-4'>\r\n                <span className='h2'>You scored {score} out of {questions.length}.</span>\r\n              </div>\r\n              <h2 className='h5 mb-3'>The correct answers are...</h2>\r\n              {questions.map((question, index) => (\r\n                <div key={index}>\r\n                  <p>{question.questionText}</p>\r\n                  <p className='text-success font-weight-bold'>{getCorrectAnswer(question.answers)}</p>\r\n                </div>\r\n              ))}\r\n              <button type='button' className='btn btn-info btn-block' onClick={resetQuiz}>Try again</button>\r\n            </div>\r\n          ) : (\r\n            /* Show the questions if showScore has been set to false */\r\n            <>\r\n            <div className='question-section'>\r\n              <div className='question-count'>\r\n                <h2 className='h4'>Question {currentQuestion + 1}/{questions.length}</h2>\r\n              </div>\r\n              <div className='question-text my-3'>\r\n                <h3 className='h5'>{questions[currentQuestion].questionText}</h3>\r\n              </div>\r\n            </div>\r\n            <div className='answer-section'>\r\n              {questions[currentQuestion].answers.map((answer, index) => (\r\n                <button key={index} type='button' className='btn btn-info btn-block' onClick={() => answerOptionClickHandler(answer.isCorrect)}>{answer.answerText}</button>\r\n              ))}\r\n            </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Quiz;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Header from './Header';\nimport Quiz from './Quiz';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Header />\n    <Quiz />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}